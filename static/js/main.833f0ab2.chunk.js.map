{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","props","names","contacts","map","contact","value","name","htmlFor","id","onChange","required","defaultListValue","selected","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","alert","onSubmit","e","target","type","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","disabled","className","Tile","object","info","Object","values","index","TileList","tiles","AppointmentsPage","useState","currentTitle","setCurrentTitle","currentContact","setCurrentContact","currentDate","setCurrentDate","currentTime","setCurrentTime","setAlert","useEffect","appointments","appointmentItem","console","log","preventDefault","addAppointment","document","getElementById","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","currentName","setCurrentName","currentPhone","setCurrentPhone","currentEmail","setCurrentEmail","duplicates","setDuplicates","addContact","App","ROUTES","setContacts","setAppointments","to","activeClassName","exact","path","prev","ReactDOM","render"],"mappings":"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","file":"static/js/main.833f0ab2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = (props) => {\r\n  const names = props.contacts.map((contact) => {\r\n    return <option value={contact.name} key={contact.name} >{contact.name}</option>\r\n  });\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"contactList\">Choose contact:</label>\r\n      <select id=\"contactList\" onChange={props.onChange} required >\r\n        <option value={props.defaultListValue} key=\"default\" selected=\"selected\" >{props.defaultListValue}</option>\r\n        {names}\r\n      </select>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { ContactPicker } from \"../../components/contactPicker/ContactPicker\";\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit,\r\n  alert,\r\n  defaultListValue\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"titleInput\">Title</label>\r\n      <input \r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        type=\"text\"\r\n        id=\"titleInput\" \r\n        required />\r\n      <ContactPicker \r\n        contacts={contacts}\r\n        onChange={(e) => setContact(e.target.value)}\r\n        defaultListValue={defaultListValue} />\r\n      <label htmlFor=\"dateInput\">Date</label>\r\n      <input \r\n        value={date}\r\n        onChange={(e) => setDate(e.target.value)}        \r\n        type=\"text\"\r\n        id=\"dateInput\" \r\n        min={getTodayString()}\r\n        required />\r\n      <label htmlFor=\"timeInput\">Time</label>\r\n      <input \r\n        value={time}\r\n        onChange={(e) => setTime(e.target.value)}        \r\n        type=\"text\"\r\n        id=\"timeInput\" \r\n        required />\r\n      <button type=\"submit\" disabled={alert ? true : false} >Add Appointment</button> \r\n      <h2 className=\"alert\">{alert}</h2>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = (props) => {\r\n  \r\n  const object = props.info;\r\n  const values = Object.values(object)\r\n\r\n  // console.log(values);\r\n\r\n  const info = values.map((value, index) => {\r\n    let className;\r\n    if (index === 0) {\r\n      className='tile-title';\r\n    } else {\r\n      className='tile'\r\n    }\r\n    return <p key={index} className={className} >{value}</p>\r\n    \r\n  });\r\n  // console.log(info);\r\n  \r\n\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {info}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Tile } from \"../tile/Tile\";\r\n\r\nexport const TileList = (props) => {\r\n  \r\n  const tiles = props.object.map((info, index) => <Tile info={info} key={index} />);\r\n\r\n  return (\r\n    <div>\r\n      {tiles}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\n\r\nexport const AppointmentsPage = (props) => {\r\n  const [currentTitle, setCurrentTitle] = useState('');\r\n  const [currentContact, setCurrentContact] = useState('');\r\n  const [currentDate, setCurrentDate] = useState('');\r\n  const [currentTime, setCurrentTime] = useState('');\r\n  const [alert, setAlert] = useState('');\r\n  const defaultListValue = 'No contact selected';\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.addAppointment(currentTitle, currentContact, currentDate, currentTime);\r\n    setCurrentTitle('');\r\n    setCurrentContact('');\r\n    setCurrentDate('');\r\n    setCurrentTime('');\r\n    document.getElementById('contactList').value = defaultListValue;\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    for(const appointmentItem of props.appointments) {\r\n      if (appointmentItem.date === currentDate && appointmentItem.time === currentTime) {\r\n        setAlert('Appointment is already booked.');\r\n        console.log('Appointment is already booked.'); \r\n      } else {\r\n        setAlert('');\r\n      }\r\n    }\r\n\r\n  }, [props.appointments, currentDate, currentTime]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm contacts={props.contacts}\r\n                         title={currentTitle}\r\n                         setTitle={setCurrentTitle}\r\n                         contact={currentContact}\r\n                         setContact={setCurrentContact}\r\n                         date={currentDate}\r\n                         setDate={setCurrentDate}\r\n                         time={currentTime}\r\n                         setTime={setCurrentTime}\r\n                         handleSubmit={handleSubmit}\r\n                         alert={alert}\r\n                         defaultListValue={defaultListValue} />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList object={props.appointments}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit,\r\n  alert\r\n}) => {\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} >\r\n      <label htmlFor=\"nameInput\">Name</label>\r\n      <input \r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        type=\"text\"\r\n        id=\"nameInput\" \r\n        required />\r\n      <label htmlFor=\"phoneInput\">Phone</label>\r\n      <input \r\n        value={phone}\r\n        onChange={(e) => setPhone(e.target.value)}        \r\n        type=\"tel\" \r\n        pattern=\"^\\s*\\(?(020[7,8]{1}\\)?[ ]?[1-9]{1}[0-9{2}[ ]?[0-9]{4})|(0[1-8]{1}[0-9]{3}\\)?[ ]?[1-9]{1}[0-9]{2}[ ]?[0-9]{3})\\s*$\"\r\n        id=\"phoneInput\" \r\n        required />\r\n      <label htmlFor=\"emailInput\">Email</label>\r\n      <input \r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}        \r\n        type=\"email\"\r\n        id=\"emailInput\" \r\n        required />\r\n      <button type=\"submit\" disabled={alert ? true : false} >Add Contact</button> \r\n      <h2 className=\"alert\">{alert}</h2>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = (props) => {\r\n  const [currentName, setCurrentName] = useState('');\r\n  const [currentPhone, setCurrentPhone] = useState('');\r\n  const [currentEmail, setCurrentEmail] = useState('');\r\n  const [duplicates, setDuplicates] = useState(false);\r\n  const [alert, setAlert] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!duplicates) {\r\n      props.addContact(currentName, currentPhone, currentEmail);\r\n      setCurrentName('');\r\n      setCurrentPhone('');\r\n      setCurrentEmail('');\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n  \r\n    for(const contactItem of props.contacts) {\r\n      if (contactItem.name === currentName) {\r\n        if (!duplicates) {\r\n          setDuplicates(true);\r\n          setAlert('Contact is already in the list.');\r\n          console.log('Contact is already in the list.');\r\n        } \r\n        return;\r\n      } else {\r\n        setDuplicates(false);\r\n        setAlert('');\r\n      }\r\n    }\r\n\r\n  }, [props.contacts, currentName, duplicates]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm name={currentName} \r\n                     setName={setCurrentName} \r\n                     phone={currentPhone}\r\n                     setPhone={setCurrentPhone}\r\n                     email={currentEmail}\r\n                     setEmail={setCurrentEmail}\r\n                     handleSubmit={handleSubmit}\r\n                     alert={alert} />\r\n        \r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList object={props.contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  \r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  const defaultContacts = [\r\n    {\r\n      name: 'Atanas Dimitrov',\r\n      phone: '07712345678',\r\n      email: 'atanas@defaultemail.com'\r\n    },\r\n    {\r\n      name: 'John Doe',\r\n      phone: '07787654321',\r\n      email: 'john@defaultemail.com'\r\n    }\r\n  ]\r\n  const [contacts, setContacts] = useState(defaultContacts);\r\n\r\n  const addContact = (name, phone, email) => {\r\n    setContacts((prev) => {\r\n      return [...prev, {name: name, phone: phone, email: email}];\r\n    });\r\n  }\r\n\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointments((prev) => {\r\n      return [...prev, {title: title, contact: contact, date: date, time: time}]\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n      \r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage contacts={contacts} addContact={addContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage appointments={appointments} addAppointment={addAppointment} contacts={contacts} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}